###Generate CLIC1 mRNA expression in TCGA PANCAN dataset and combine CLIC1 expression with tumortype and sampletype together.###
R
a<-read.delim("TCGA-PANCAN-RNA-seq.txt.txt",header=FALSE)
b<-a[31611,]
c<-a[1,]
d<-rbind(c,b)
d<-t(d)
write.table(d,"CLIC1mRNAexpression.txt",col.names=FALSE,row.names=FALSE,quote=FALSE,sep="\t")
metadata<-read.delim("PANCAN_clinicalMatrix.txt",header=TRUE)
tumortype<-data.frame(metadata$sampleID,metadata$X_primary_disease,metadata$sample_type)
colnames(tumortype)<-c("sample","primary_disease","sample_type")
CLIC1<-read.delim("CLIC1mRNAexpression.txt",header=T)
CLIC1andTumor<-merge(tumortype,CLIC1,by="sample",all=FALSE)
write.table(CLIC1andTumor,"CLIC1mRNAexpression_and_tumortype.txt",col.names=TRUE,row.names=FALSE,quote=FALSE,sep="\t")
###Number tumortype and sampletype manually and generate the data file CLIC1mRNAexpression_and_tumortype_combined.txt.###

###Compare CLIC1 expressio in each type of TCGA tumor.###
CLIC1<-read.delim("CLIC1mRNAexpression_and_tumortype_combined.txt",header=T)
mydata<-list()
levenetest<-list()
ttest<-list()
welchttest<-list()
###Seperate the major dataest into 33 datasets according to tumor types.###
for(i in 1:33){mydata[[i]]<-subset(CLIC1,primary_disease_ID==i)}
###Levene's test was firstly used to detect the equality of variances. Those datasets without normal contral data will report error.###
library(car)
levenetest[[1]]<-leveneTest(CLIC1~sample_type_group,mydata[[1]])
levenetest[[2]]<-leveneTest(CLIC1~sample_type_group,mydata[[2]])
levenetest[[3]]<-leveneTest(CLIC1~sample_type_group,mydata[[3]])
levenetest[[4]]<-leveneTest(CLIC1~sample_type_group,mydata[[4]])
levenetest[[5]]<-leveneTest(CLIC1~sample_type_group,mydata[[5]])
levenetest[[6]]<-leveneTest(CLIC1~sample_type_group,mydata[[6]])
levenetest[[7]]<-leveneTest(CLIC1~sample_type_group,mydata[[7]])
levenetest[[8]]<-leveneTest(CLIC1~sample_type_group,mydata[[8]])
levenetest[[9]]<-leveneTest(CLIC1~sample_type_group,mydata[[9]])
levenetest[[10]]<-leveneTest(CLIC1~sample_type_group,mydata[[10]])
levenetest[[11]]<-leveneTest(CLIC1~sample_type_group,mydata[[11]])
levenetest[[12]]<-leveneTest(CLIC1~sample_type_group,mydata[[12]])
levenetest[[13]]<-leveneTest(CLIC1~sample_type_group,mydata[[13]])
levenetest[[14]]<-leveneTest(CLIC1~sample_type_group,mydata[[14]])
levenetest[[15]]<-leveneTest(CLIC1~sample_type_group,mydata[[15]])
levenetest[[16]]<-leveneTest(CLIC1~sample_type_group,mydata[[16]])
levenetest[[17]]<-leveneTest(CLIC1~sample_type_group,mydata[[17]])
levenetest[[18]]<-leveneTest(CLIC1~sample_type_group,mydata[[18]])
levenetest[[19]]<-leveneTest(CLIC1~sample_type_group,mydata[[19]])
levenetest[[20]]<-leveneTest(CLIC1~sample_type_group,mydata[[20]])
levenetest[[21]]<-leveneTest(CLIC1~sample_type_group,mydata[[21]])
levenetest[[22]]<-leveneTest(CLIC1~sample_type_group,mydata[[22]])
levenetest[[23]]<-leveneTest(CLIC1~sample_type_group,mydata[[23]])
levenetest[[24]]<-leveneTest(CLIC1~sample_type_group,mydata[[24]])
levenetest[[25]]<-leveneTest(CLIC1~sample_type_group,mydata[[25]])
levenetest[[26]]<-leveneTest(CLIC1~sample_type_group,mydata[[26]])
levenetest[[27]]<-leveneTest(CLIC1~sample_type_group,mydata[[27]])
levenetest[[28]]<-leveneTest(CLIC1~sample_type_group,mydata[[28]])
levenetest[[29]]<-leveneTest(CLIC1~sample_type_group,mydata[[29]])
levenetest[[30]]<-leveneTest(CLIC1~sample_type_group,mydata[[30]])
levenetest[[31]]<-leveneTest(CLIC1~sample_type_group,mydata[[31]])
levenetest[[32]]<-leveneTest(CLIC1~sample_type_group,mydata[[32]])
levenetest[[33]]<-leveneTest(CLIC1~sample_type_group,mydata[[33]])
###Welch's t test was used to compare CLIC1 expression in each tumor and normal control. Those datasets without normal contral data will report error.###
welchttest[[1]]<-t.test(CLIC1~sample_type_group,mydata[[1]])
welchttest[[2]]<-t.test(CLIC1~sample_type_group,mydata[[2]])
welchttest[[3]]<-t.test(CLIC1~sample_type_group,mydata[[3]])
welchttest[[4]]<-t.test(CLIC1~sample_type_group,mydata[[4]])
welchttest[[5]]<-t.test(CLIC1~sample_type_group,mydata[[5]])
welchttest[[6]]<-t.test(CLIC1~sample_type_group,mydata[[6]])
welchttest[[7]]<-t.test(CLIC1~sample_type_group,mydata[[7]])
welchttest[[8]]<-t.test(CLIC1~sample_type_group,mydata[[8]])
welchttest[[9]]<-t.test(CLIC1~sample_type_group,mydata[[9]])
welchttest[[10]]<-t.test(CLIC1~sample_type_group,mydata[[10]])
welchttest[[11]]<-t.test(CLIC1~sample_type_group,mydata[[11]])
welchttest[[12]]<-t.test(CLIC1~sample_type_group,mydata[[12]])
welchttest[[13]]<-t.test(CLIC1~sample_type_group,mydata[[13]])
welchttest[[14]]<-t.test(CLIC1~sample_type_group,mydata[[14]])
welchttest[[15]]<-t.test(CLIC1~sample_type_group,mydata[[15]])
welchttest[[16]]<-t.test(CLIC1~sample_type_group,mydata[[16]])
welchttest[[17]]<-t.test(CLIC1~sample_type_group,mydata[[17]])
welchttest[[18]]<-t.test(CLIC1~sample_type_group,mydata[[18]])
welchttest[[19]]<-t.test(CLIC1~sample_type_group,mydata[[19]])
welchttest[[20]]<-t.test(CLIC1~sample_type_group,mydata[[20]])
welchttest[[21]]<-t.test(CLIC1~sample_type_group,mydata[[21]])
welchttest[[22]]<-t.test(CLIC1~sample_type_group,mydata[[22]])
welchttest[[23]]<-t.test(CLIC1~sample_type_group,mydata[[23]])
welchttest[[24]]<-t.test(CLIC1~sample_type_group,mydata[[24]])
welchttest[[25]]<-t.test(CLIC1~sample_type_group,mydata[[25]])
welchttest[[26]]<-t.test(CLIC1~sample_type_group,mydata[[26]])
welchttest[[27]]<-t.test(CLIC1~sample_type_group,mydata[[27]])
welchttest[[28]]<-t.test(CLIC1~sample_type_group,mydata[[28]])
welchttest[[29]]<-t.test(CLIC1~sample_type_group,mydata[[29]])
welchttest[[30]]<-t.test(CLIC1~sample_type_group,mydata[[30]])
welchttest[[31]]<-t.test(CLIC1~sample_type_group,mydata[[31]])
welchttest[[32]]<-t.test(CLIC1~sample_type_group,mydata[[32]])
welchttest[[33]]<-t.test(CLIC1~sample_type_group,mydata[[33]])
###Welch's t test was shut off to compare CLIC1 expression in each tumor and normal control assuming the variances is equal.###
###Those datasets without normal contral data will report error.###
ttest[[1]]<-t.test(CLIC1~sample_type_group,mydata[[1]],var.equal=TRUE)
ttest[[2]]<-t.test(CLIC1~sample_type_group,mydata[[2]],var.equal=TRUE)
ttest[[3]]<-t.test(CLIC1~sample_type_group,mydata[[3]],var.equal=TRUE)
ttest[[4]]<-t.test(CLIC1~sample_type_group,mydata[[4]],var.equal=TRUE)
ttest[[5]]<-t.test(CLIC1~sample_type_group,mydata[[5]],var.equal=TRUE)
ttest[[6]]<-t.test(CLIC1~sample_type_group,mydata[[6]],var.equal=TRUE)
ttest[[7]]<-t.test(CLIC1~sample_type_group,mydata[[7]],var.equal=TRUE)
ttest[[8]]<-t.test(CLIC1~sample_type_group,mydata[[8]],var.equal=TRUE)
ttest[[9]]<-t.test(CLIC1~sample_type_group,mydata[[9]],var.equal=TRUE)
ttest[[10]]<-t.test(CLIC1~sample_type_group,mydata[[10]],var.equal=TRUE)
ttest[[11]]<-t.test(CLIC1~sample_type_group,mydata[[11]],var.equal=TRUE)
ttest[[12]]<-t.test(CLIC1~sample_type_group,mydata[[12]],var.equal=TRUE)
ttest[[13]]<-t.test(CLIC1~sample_type_group,mydata[[13]],var.equal=TRUE)
ttest[[14]]<-t.test(CLIC1~sample_type_group,mydata[[14]],var.equal=TRUE)
ttest[[15]]<-t.test(CLIC1~sample_type_group,mydata[[15]],var.equal=TRUE)
ttest[[16]]<-t.test(CLIC1~sample_type_group,mydata[[16]],var.equal=TRUE)
ttest[[17]]<-t.test(CLIC1~sample_type_group,mydata[[17]],var.equal=TRUE)
ttest[[18]]<-t.test(CLIC1~sample_type_group,mydata[[18]],var.equal=TRUE)
ttest[[19]]<-t.test(CLIC1~sample_type_group,mydata[[19]],var.equal=TRUE)
ttest[[20]]<-t.test(CLIC1~sample_type_group,mydata[[20]],var.equal=TRUE)
ttest[[21]]<-t.test(CLIC1~sample_type_group,mydata[[21]],var.equal=TRUE)
ttest[[22]]<-t.test(CLIC1~sample_type_group,mydata[[22]],var.equal=TRUE)
ttest[[23]]<-t.test(CLIC1~sample_type_group,mydata[[23]],var.equal=TRUE)
ttest[[24]]<-t.test(CLIC1~sample_type_group,mydata[[24]],var.equal=TRUE)
ttest[[25]]<-t.test(CLIC1~sample_type_group,mydata[[25]],var.equal=TRUE)
ttest[[26]]<-t.test(CLIC1~sample_type_group,mydata[[26]],var.equal=TRUE)
ttest[[27]]<-t.test(CLIC1~sample_type_group,mydata[[27]],var.equal=TRUE)
ttest[[28]]<-t.test(CLIC1~sample_type_group,mydata[[28]],var.equal=TRUE)
ttest[[29]]<-t.test(CLIC1~sample_type_group,mydata[[29]],var.equal=TRUE)
ttest[[30]]<-t.test(CLIC1~sample_type_group,mydata[[30]],var.equal=TRUE)
ttest[[31]]<-t.test(CLIC1~sample_type_group,mydata[[31]],var.equal=TRUE)
ttest[[32]]<-t.test(CLIC1~sample_type_group,mydata[[32]],var.equal=TRUE)
ttest[[33]]<-t.test(CLIC1~sample_type_group,mydata[[33]],var.equal=TRUE)
###Results output.###
sink("result.txt")
print(levenetest)
print(welchttest)
print(ttest)
sink()
